services:
  - type: redis
    name: redis-service
    region: frankfurt
    plan: starter
    ipAllowList: # required - allow external connections from only these CIDR blocks
      - source: 41.212.60.246
        description: mtwapa
  - type: worker
    name: consumer
    region: frankfurt
    env: rust
    buildCommand: cargo build --release --bin consumer
    startCommand: cargo run --release --bin consumer
    rootDir: ./rust-workspace
    autoDeploy: true
    envVars:
      - key: APP_REDIS__HOST
        fromService:
          name: redis-service
          type: redis
          property: connectionString
      - key: APP_LOCATION__API_KEY
        sync: false
      - key: APP_EMAIL__AUTH_TOKEN
        sync: false
      - key: APP_DATABASE__HOST
        fromDatabase:
          name: prod
          property: host
      - key: APP_DATABASE__PORT
        fromDatabase:
          name: prod
          property: port
      - key: APP_DATABASE__USERNAME
        fromDatabase:
          name: prod
          property: user
      - key: APP_DATABASE__PASSWORD
        fromDatabase:
          name: prod
          property: password
      - key: APP_DATABASE__DATABASE_NAME
        fromDatabase:
          name: prod
          property: database
      - key: APP_DATABASE__REQUIRE_SSL
        value: true
  - type: worker
    name: tokenizer
    region: frankfurt
    env: rust
    buildCommand: cargo build --release --bin tokenizer
    startCommand: cargo run --release --bin tokenizer
    rootDir: ./rust-workspace
    autoDeploy: true
    envVars:
      - key: APP_REDIS__HOST
        fromService:
          name: redis-service
          type: redis
          property: connectionString
      - key: APP_EXTERNAL_API_RATE_LIMITS_EMAIL
        sync: false
      - key: APP_EXTERNAL_API_RATE_LIMITS_LOCATION
        sync: false
    buildFilter:
      paths:
      - shared-kernel/**
      - background_workers/tokenizer/**
      - configuration/**
  - type: cron
    name: dry_run_import
    region: frankfurt
    env: rust
    buildCommand: cargo build --release --bin dry_run
    startCommand: cargo run --release --bin dry_run
    rootDir: ./rust-workspace
    schedule: "0 6 * * *"
    autoDeploy: true
    envVars:
      - key: APP_EMAIL__AUTH_TOKEN
        sync: false
      - key: APP_EMAIL__ADMIN_EMAIL
        sync: false

  - type: web
    name: http_server
    region: frankfurt
    env: rust
    buildCommand: cargo build --release --bin http_server
    startCommand: cargo run --release --bin http_server
    rootDir: ./rust-workspace
    autoDeploy: true
    envVars:
      - key: APP_REDIS__HOST
        fromService:
          name: redis-service
          type: redis
          property: connectionString
      - key: APP_LOCATION__API_KEY
        sync: false
      - key: APP_EMAIL__AUTH_TOKEN
        sync: false
      - key: APP_DATABASE__HOST
        fromDatabase:
          name: prod
          property: host
      - key: APP_DATABASE__PORT
        fromDatabase:
          name: prod
          property: port
      - key: APP_DATABASE__USERNAME
        fromDatabase:
          name: prod
          property: user
      - key: APP_DATABASE__PASSWORD
        fromDatabase:
          name: prod
          property: password
      - key: APP_DATABASE__DATABASE_NAME
        fromDatabase:
          name: prod
          property: database
      - key: APP_DATABASE__REQUIRE_SSL
        value: true
    domains:
      - blackouts-api.render.com
databases:
  - name: prod
    region: frankfurt
    plan: starter
    databaseName: prod_app
    user: app_user
    ipAllowList:
      - source: 41.212.60.246
        description: mtwapa
    postgresMajorVersion: 15


