services:
  - type: redis
    name: redis-service
    region: frankfurt
    plan: starter
    ipAllowList: # required - allow external connections from only these CIDR blocks
      - source: 197.237.246.150
        description: garden city home office
  - type: pserv
    name: dragonfly_service
    region: frankfurt
    env: docker
    dockerfilePath: ./docker/dragon_fly.Dockerfile
    rootDir: ./rust-workspace
    autoDeploy: false

  - type: worker
    name: consumer
    region: frankfurt
    env: rust
    buildCommand: cargo build --release --bin consumer
    startCommand: cargo run --release --bin consumer
    rootDir: ./rust-workspace
    autoDeploy: true
    envVars:
      - key: APP_REDIS__HOST
        sync: false
      - key: APP_LOCATION__API_KEY
        sync: false
      - key: APP_EMAIL__AUTH_TOKEN
        sync: false
      - key: APP_DATABASE__HOST
        fromDatabase:
          name: prod
          property: host
      - key: APP_DATABASE__PORT
        fromDatabase:
          name: prod
          property: port
      - key: APP_DATABASE__USERNAME
        fromDatabase:
          name: prod
          property: user
      - key: APP_DATABASE__PASSWORD
        fromDatabase:
          name: prod
          property: password
      - key: APP_DATABASE__DATABASE_NAME
        fromDatabase:
          name: prod
          property: database
      - key: APP_DATABASE__REQUIRE_SSL
        value: true

  - type: cron
    name: import_and_notify
    region: frankfurt
    env: rust
    buildCommand: cargo build --release --bin import_and_notify
    startCommand: cargo run --release --bin import_and_notify
    rootDir: ./rust-workspace
    schedule: "0 2 * * *"
    autoDeploy: true
    envVars:
      - key: APP_REDIS__HOST
        sync: false
      - key: APP_LOCATION__API_KEY
        sync: false
      - key: APP_EMAIL__AUTH_TOKEN
        sync: false
      - key: APP_EMAIL__TEMPLATE_ID
        sync: false
      - key: HONEY_COMB_TEAM_KEY
        sync: false
      - key: APP_DATABASE__HOST
        fromDatabase:
          name: prod
          property: host
      - key: APP_DATABASE__PORT
        fromDatabase:
          name: prod
          property: port
      - key: APP_DATABASE__USERNAME
        fromDatabase:
          name: prod
          property: user
      - key: APP_DATABASE__PASSWORD
        fromDatabase:
          name: prod
          property: password
      - key: APP_DATABASE__DATABASE_NAME
        fromDatabase:
          name: prod
          property: database
      - key: APP_DATABASE__REQUIRE_SSL
        value: true

  - type: cron
    name: notification_retry
    region: frankfurt
    env: rust
    buildCommand: cargo build --release --bin notification_retry
    startCommand: cargo run --release --bin notification_retry
    rootDir: ./rust-workspace
    schedule: "0 5 31 2 *" # Feb 31st, We actually dont want this to be triggered automatically;
    autoDeploy: false
    envVars:
      - key: APP_REDIS__HOST
        sync: false
      - key: APP_LOCATION__API_KEY
        sync: false
      - key: APP_EMAIL__AUTH_TOKEN
        sync: false
      - key: APP_EMAIL__TEMPLATE_ID
        sync: false
      - key: HONEY_COMB_TEAM_KEY
        sync: false
      - key: APP_DATABASE__HOST
        fromDatabase:
          name: prod
          property: host
      - key: APP_DATABASE__PORT
        fromDatabase:
          name: prod
          property: port
      - key: APP_DATABASE__USERNAME
        fromDatabase:
          name: prod
          property: user
      - key: APP_DATABASE__PASSWORD
        fromDatabase:
          name: prod
          property: password
      - key: APP_DATABASE__DATABASE_NAME
        fromDatabase:
          name: prod
          property: database
      - key: APP_DATABASE__REQUIRE_SSL
        value: true

  - type: web
    name: kplc-alerts-api
    region: frankfurt
    env: rust
    buildCommand: cargo build --release --bin http_server
    startCommand: cargo run --release --bin http_server
    rootDir: ./rust-workspace
    autoDeploy: true
    envVars:
      - key: APP_REDIS__HOST
        sync: false
      - key: HONEY_COMB_TEAM_KEY
        sync: false
      - key: APP_LOCATION__API_KEY
        sync: false
      - key: APP_EMAIL__AUTH_TOKEN
        sync: false
      - key: APP_EMAIL__TEMPLATE_ID
        sync: false
      - key: APP_AUTH__JWKS
        sync: false
      - key: APP_AUTH__AUTHORITIES
        sync: false
      - key: APP_AUTH__AUDIENCES
        sync: false
      - key: APP_DATABASE__HOST
        fromDatabase:
          name: prod
          property: host
      - key: APP_DATABASE__PORT
        fromDatabase:
          name: prod
          property: port
      - key: APP_DATABASE__USERNAME
        fromDatabase:
          name: prod
          property: user
      - key: APP_DATABASE__PASSWORD
        fromDatabase:
          name: prod
          property: password
      - key: APP_DATABASE__DATABASE_NAME
        fromDatabase:
          name: prod
          property: database
      - key: APP_DATABASE__REQUIRE_SSL
        value: true

  - type: web
    name: kplc-alerts
    env: static
    buildCommand: npm run build
    staticPublishPath: ./dist
    rootDir: ./frontend-workspace/blackouts-frontend
    autoDeploy: true
    envVars:
      - key: VITE_API_URL
        sync: false
      - key: VITE_AUTH_DOMAIN
        sync: false
      - key: VITE_AUTH_CLIENT_ID
        sync: false
      - key: VITE_AUTH_AUDIENCE
        sync: false

  - type: worker
    name: migrations
    region: frankfurt
    env: rust
    buildCommand: cargo build --release --bin migrations
    startCommand: cargo run --release --bin migrations
    rootDir: ./rust-workspace
    autoDeploy: true
    envVars:
      - key: APP_DATABASE__HOST
        fromDatabase:
          name: prod
          property: host
      - key: APP_DATABASE__PORT
        fromDatabase:
          name: prod
          property: port
      - key: APP_DATABASE__USERNAME
        fromDatabase:
          name: prod
          property: user
      - key: APP_DATABASE__PASSWORD
        fromDatabase:
          name: prod
          property: password
      - key: APP_DATABASE__DATABASE_NAME
        fromDatabase:
          name: prod
          property: database
      - key: APP_DATABASE__REQUIRE_SSL
        value: true

databases:
  - name: prod
    region: frankfurt
    plan: starter
    databaseName: prod_app
    user: app_user
    ipAllowList:
      - source: 197.237.246.150
        description: garden city home office
    postgresMajorVersion: 15


